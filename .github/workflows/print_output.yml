name: Print Output

on: [push]

jobs:
  job1:
    runs-on: ubuntu-latest    
    outputs:
      output1: ${{ steps.step1.outputs.output1 }}    
    steps:
    - id: step1
      run: echo "::set-output name=output1::value1"
    - name: set variable step
      run: |
        echo "custom_myVariable=junk value" >> "$GITHUB_ENV"
    - name: print variable step
      run: |
        echo "This is my variable:$custom_myVariable"
    - name: set output using default out variable
      id: step1_junk_output
      run: |
       echo "junk_output_var=junk output value" >> "$GITHUB_OUTPUT"
    - name: print output variable within step 1
      run: |
        echo "This is my output variable:${{steps.step1_junk_output.outputs.junk_output_var}}"

  job2:
    runs-on: ubuntu-latest    
    outputs:
      output2: ${{ steps.step2.outputs.output2 }}    
    steps:
    - id: step2
      run: echo "::set-output name=output2::value2"

  job3:
    needs: [job1, job2]
    runs-on: ubuntu-latest    
    steps:
    - uses: actions/checkout@v2    
    - name: Use outputs from job1 and job2
      run: |
        echo "The value of output1 is: ${{ needs.job1.outputs.output1 }}"
        echo "The value of output2 is: ${{ needs.job2.outputs.output2 }}"
    - name: print output variable from step 1
      run: |
        echo "This is my output variable from step 1:${{needs.job1.outputs.junk_output_var}}"
